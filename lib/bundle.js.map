{"version":3,"sources":["webpack:///webpack/bootstrap 2fcc618a3c7561166646","webpack:///./lib/math_tetris.js","webpack:///./lib/game.js","webpack:///./lib/block.js","webpack:///./lib/question.js","webpack:///./lib/gameView.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,mBAAkB,sBAAsB;AACxC;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,wBAAwB;AAC3C;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;;AAGA;AACA;AACA;AACA,IAAG;AACH;;;;AAIA;AACA;AACA;AACA;;;AAGA;;;;;;;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;;AAEH,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2fcc618a3c7561166646\n **/","var Game = require(\"./game\");\nvar GameView = require(\"./gameView\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  var canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  var ctx = canvasEl.getContext(\"2d\");\n  var game = new Game();\n  canvasEl.addEventListener('click', function(event){\n    game.handleClick(event);\n  }, false);\n  new GameView(game, ctx).start();\n});\n\n\n// var BinaryToDec = function(num){\n//   var numString = num.toString();\n//   var sum = 0;\n//   var pow = 0;\n//   while(numString.length > 0){\n//     var curNum = numString[numString.length - 1];\n//     if(parseInt(curNum)){\n//       sum+= Math.pow(2,pow);\n//     }\n//     pow++;\n//     numString = numString.slice(0,numString.length - 1);\n//   }\n//   return sum;\n// };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/math_tetris.js\n ** module id = 0\n ** module chunks = 0\n **/","var Block = require(\"./block\");\nvar Question = require('./question');\n\nvar Game = function () {\n  this.highlighted = [];\n  this.numTimesGenerated = 0;\n  this.blocks = [];\n  this.nums = [];\n  this.questions = [];\n  this.answers = [];\n  this.newQuestions();\n  this.currentIndex = 0;\n  this.add();\n  this.blockCount = 2;\n};\n\nGame.prototype.newQuestions = function () {\n  for(var i = 0; i < 3; i++){\n    this.questions.push(new Question());\n  }\n  this.getNumsFromQuestions();\n};\n\nGame.prototype.getNumsFromQuestions = function () {\n  var currentGame = this;\n  var newQuestions = this.questions.slice(this.numTimesGenerated * 3, this.questions.length);\n  this.numTimesGenerated++;\n  newQuestions.forEach(function(question, idx){\n    if(question.operation === 'multiply'){\n      var total = question.firstNum * question.secondNum;\n    } else if(question.operation === 'add'){\n      total = question.firstNum + question.secondNum;\n    } else if(question.operation === 'subtract'){\n      total = question.firstNum - question.secondNum;\n    } else{\n      total = question.firstNum / question.secondNum;\n    }\n    this.answers.push(total);\n    var totString = total.toString();\n    for(var i = 0; i < totString.length; i++){\n      currentGame.nums.push(parseInt(totString[i]));\n    }\n  }.bind(this));\n};\n\nGame.BG_COLOR = \"#EEEEEE\";\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\nGame.FPS = 32;\n\nGame.prototype.add = function () {\n  for (var i = 0; i < 3; i++) {\n    var numPos = Math.floor(Math.random() * this.nums.length);\n    var duplicate = true;\n    while(duplicate){\n      duplicate = false;\n      var currentBlock = new Block(this.nums[numPos], i);\n      this.blocks.forEach(function(block){\n        if (block.pos[0] === currentBlock.pos[0] && block.pos[1] === currentBlock.pos[1]){\n          duplicate = true;\n        }\n      });\n    }\n    this.blocks.push(currentBlock);\n    this.nums.splice(numPos,1);\n\n  }\n\n};\n\n\nGame.prototype.newBlock = function () {\n  var numPos = Math.floor(Math.random() * this.nums.length);\n  this.blockCount++;\n  this.blocks.push(new Block(this.nums[numPos], this.blockCount));\n  this.nums.splice(numPos, 1);\n};\n\n\nGame.prototype.checkCollisions = function () {\n  var game = this;\n  var gameIsOver = false;\n  this.blocks.forEach(function (block1) {\n    game.blocks.forEach(function (block2) {\n      if (block1 == block2) {\n        // don't allow self-collision\n        return;\n      }\n\n      if (block1.isCollidedWith(block2)) {\n        block1.collideWith(block2);\n        if(block2.maxHeight === 300){\n          gameIsOver = true;\n        }\n      }\n    });\n\n  });\n  return gameIsOver;\n};\n\nGame.prototype.handleClick = function (event) {\n  var game = this;\n  var clickedBlock = false;\n  this.blocks.forEach(function(block){\n    if(event.layerX >= block.pos[0] && event.layerX <= block.pos[0]+block.width){\n      if(event.layerY >= block.pos[1] && event.layerY <= block.pos[1] + block.height){\n        clickedBlock = true;\n        block.highlight();\n        if (block.highlighted){\n          this.highlighted.push(block);\n          var curAns = this.answers[this.currentIndex].toString();\n          var match = true;\n\n          for (var i = 0; i < curAns.length; i++) {\n            if(curAns[i] !== (game.highlighted[i].num).toString()){\n              match = false;\n            }\n            if (curAns.length !== game.highlighted.length){\n              match = false;\n            }\n          }\n          if(match){\n            this.removeBlocks();\n          }\n        } else{\n          this.highlighted.splice(this.highlighted.indexOf(block.num));\n        }\n      }\n    }\n  }.bind(this));\n  if(!clickedBlock){\n    this.blocks.forEach(function(block){\n      block.highlighted = false;\n    });\n    this.highlighted = [];\n  }\n};\n\nGame.prototype.removeBlocks = function () {\n  this.highlighted.forEach(function(block){\n    var curMaxHeight = block.maxHeight;\n    var col = block.pos[0];\n    var numJumped = 0;\n    for (var i = 0; i < this.blocks.length; i++) {\n      if(block.idx === this.blocks[i].idx){\n        var removeIndex = i;\n      } else if(this.blocks[i].pos[0] === col && this.blocks[i].maxHeight < curMaxHeight){\n        this.blocks[i].maxHeight += 100;\n        this.blocks[i].pos[1]+= 5*numJumped;\n        numJumped++;\n      }\n    }\n    this.blocks.splice(removeIndex, 1);\n  }.bind(this));\n  this.currentIndex++;\n  this.highlighted = [];\n};\n\nGame.prototype.draw = function (ctx, gameIsOver, gameWon) {\n  if(this.nums.length < 1){\n    this.newQuestions();\n  }\n  if(gameIsOver){\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRect(0,0, Game.DIM_X, Game.DIM_Y);\n    ctx.font=\"60px Arial\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"You Lose\", 400, 300);\n  } else if(gameWon){\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRect(0,0, Game.DIM_X, Game.DIM_Y);\n    ctx.font=\"60px Arial\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"You Win!\", 400, 300);\n  } else{\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    // var background = new Image();\n    // background.src = \"http://lowellmakes.com/wp-content/uploads/2014/03/pipix1600x12001hn.png\";\n    // background.onload = function(){\n    //   ctx.drawImage(background,0,0);\n    // };\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    this.questions[this.currentIndex].draw(ctx, Game);\n    this.blocks.forEach(function (block) {\n      block.draw(ctx);\n    });\n  }\n\n};\n\n\nGame.prototype.moveObjects = function (delta) {\n  this.blocks.forEach(function (block) {\n    block.move();\n  });\n};\n\n\n\nGame.prototype.step = function (delta) {\n  this.moveObjects(delta);\n  return this.checkCollisions();\n};\n\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","var Block = function(num, idx){\n  this.height = 98;\n  this.width = 123;\n  this.color = Block.COLORS[Math.floor(Math.random() * Block.COLORS.length)];\n  this.pos = [Math.floor(Math.random() * 8) * 125,97];\n  this.maxHeight = 600;\n  this.num = num;\n  this.highlighted = false;\n  this.idx = idx;\n};\n\nBlock.COLORS = [\"#FF0000\", \"#FF00E0\", \"#2C9C96\", \"#00FF00\", \"#0000FF\"];\n\nBlock.prototype.draw = function (ctx) {\n  ctx.fillStyle = this.color;\n\n  ctx.beginPath();\n  ctx.rect(\n    this.pos[0], this.pos[1],this.width, this.height);\n  ctx.fill();\n  if(this.highlighted){\n    ctx.lineWidth = 5;\n    ctx.stroke();\n  }\n\n\n  ctx.font=\"30px Arial\";\n  ctx.fillStyle = \"white\";\n  ctx.fillText(this.num, this.pos[0] + 55, this.pos[1] + 50);\n\n};\n\nBlock.prototype.highlight = function () {\n  if(this.highlighted){\n    this.highlighted = false;\n  } else{\n    this.highlighted = true;\n  }\n};\n\nBlock.prototype.isCollidedWith = function (otherBlock) {\n  if(otherBlock.pos[0] === this.pos[0]){\n    if(this.pos[1] + 100 === otherBlock.pos[1]){\n      return true;\n    }\n  }\n  return false;\n};\n\nBlock.prototype.collideWith = function (otherBlock) {\n    this.maxHeight = otherBlock.pos[1] - 2;\n  // }\n};\n\nBlock.prototype.unCollideWith = function () {\n  this.maxHeight = 600;\n};\n\nBlock.prototype.move = function () {\n  if(this.pos[1] < this.maxHeight - this.height){\n    this.pos[1] += 1;\n  }\n};\n\nmodule.exports = Block;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/block.js\n ** module id = 2\n ** module chunks = 0\n **/","var Question = function(){\nvar operations = ['add', 'subtract', 'multiply', 'divide', 'binary'];\nthis.operation = operations[Math.floor(Math.random()*4)];\nthis.firstNum = this.generateFirstNum();\nthis.secondNum = this.generateSecondNum();\n};\n\nQuestion.prototype.generateFirstNum = function () {\n  if(this.operation === 'binary'){\n    \n  }\n  if(this.operation !== 'multiply'){\n    return Math.floor(Math.random() * 200 + 1);\n  } else {\n    return Math.floor(Math.random() * 20);\n  }\n};\n\nQuestion.prototype.generateSecondNum = function () {\n  if(this.operation === 'multiply'){\n    return Math.floor(Math.random() * 20);\n  } else if(this.operation === 'subtract'){\n    var secNum = 250;\n    while(secNum > this.firstNum){\n      secNum = Math.floor(Math.random() * 200);\n    }\n    return secNum;\n  } else if(this.operation === 'add'){\n    return Math.floor(Math.random() * 200);\n  } else if(this.operation === 'binary'){\n\n  }else{\n    var denoms = this.findDenoms();\n    return denoms[Math.floor(Math.random() * denoms.length)];\n  }\n};\n\nQuestion.prototype.findDenoms = function () {\n  var denoms = [];\n  for(var i = 1; i <= this.firstNum; i++){\n    if (this.firstNum % i === 0){\n      denoms.push(i);\n    }\n  }\n  return denoms;\n};\n\nQuestion.prototype.draw = function (ctx, Game) {\n  var question = \"\";\n  if(this.operation === 'multiply'){\n    var op = ' x ';\n  } else if(this.operation === 'add'){\n    op = ' + ';\n  } else if(this.operation === 'subtract'){\n    op = ' - ';\n  } else{\n    op = ' / ';\n  }\n  question += this.firstNum + op + this.secondNum + \" = \";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRect(0,0,Game.DIM_X, 100);\n  ctx.font=\"30px Arial\";\n  ctx.fillStyle = \"white\";\n  ctx.fillText(question, 450, 60);\n};\n\n\nmodule.exports = Question;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/question.js\n ** module id = 3\n ** module chunks = 0\n **/","\nvar GameView = function (game, ctx) {\n  this.ctx = ctx;\n  this.game = game;\n  this.incremented = true;\n  this.newQuestions = true;\n  this.won = false;\n};\n\nGameView.prototype.start = function () {\n  this.lastTime = 0;\n  //start the animation\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function(time){\n  if(Math.floor(time / 1000) % 3 === 0){\n    if(!this.incremented){\n      this.game.newBlock();\n      this.incremented = true;\n    }\n  } else{\n    this.incremented = false;\n  }\n  if(Math.floor(time / 1000) % 90 === 0 && time > 1000){\n    this.won = true;\n  }\n  var timeDelta = time - this.lastTime;\n\n  var gameLost = this.game.step(timeDelta);\n  this.game.draw(this.ctx, gameLost, this.won);\n  this.lastTime = time;\n\n  //every call to animate requests causes another call to animate\n  if(!this.won && !gameLost){\n    requestAnimationFrame(this.animate.bind(this));\n  }\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameView.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}